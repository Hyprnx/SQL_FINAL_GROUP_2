--
GO
CREATE OR ALTER FUNCTION AUTO_REG_CODE()
RETURNS NVARCHAR(7)
AS
BEGIN
	DECLARE @ID NVARCHAR(7)
	IF (SELECT COUNT(REG_CODE) FROM CTDK) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(REG_CODE, 3)) FROM CTDK
		SELECT @ID = CASE
			WHEN @ID >= 0 and @ID < 9 THEN 'CTDK00' + CAST((CAST(@ID AS INT)+1) AS nchar)
			WHEN @ID >= 9 THEN 'CTDK0' + CAST((CAST(@ID AS INT)+1) AS nchar)
		END
	RETURN @ID
END;


--- ADD SD WHEN HAS NEW CUS
GO
CREATE OR ALTER TRIGGER ADD_CUSTOMER ON KHACHHANG
AFTER INSERT AS
DECLARE @cus_code AS NVARCHAR(7);
SELECT @cus_code = i.CUS_CODE FROM inserted AS i;
BEGIN
INSERT INTO SODUKH VALUES (@cus_code,50000)
END;


-- WHEN UPDATE HD => ADD A NEW CTDK
-- 
GO
CREATE OR ALTER TRIGGER CHECK_NEW_SER ON HOPDONG
AFTER UPDATE AS
DECLARE @cus_code AS NVARCHAR(7);
DECLARE @contract_code as NVARCHAR(5);
DECLARE @contract_status AS NVARCHAR(100);
DECLARE @reg_end as DATETIME;
DECLARE @now datetime;
DECLARE @day INT
DECLARE @type NVARCHAR(50);
DECLARE @price FLOAT
DECLARE @sd FLOAT
DECLARE @cus_name AS NVARCHAR(250);

SELECT @day = DICHVU.SERVICE_DURATION FROM DELETED AS i
JOIN DICHVU ON DICHVU.SERVICE_CODE = i.SERVICE_CODE
set @now = getdate()
SET @reg_end = dateadd(day,+@day,@now)
SELECT @cus_code = i.CUS_CODE FROM DELETED AS i
SELECT @contract_code = i.CONTRACT_CODE FROM DELETED AS i
SELECT @contract_status = i.CONTRACT_STATUS FROM DELETED AS i
SELECT @type = SERVICE_DESC FROM DELETED AS i join DICHVU on DICHVU.SERVICE_CODE = i.SERVICE_CODE
SELECT @price = SERVICE_PRICE FROM DELETED AS i join DICHVU on DICHVU.SERVICE_CODE = i.SERVICE_CODE
SELECT @sd = SD_ACCOUNTBALANCE FROM DELETED AS i JOIN KHACHHANG ON KHACHHANG.CUS_CODE = I.CUS_CODE JOIN SODUKH ON SODUKH.CUS_CODE = KHACHHANG.CUS_CODE
SELECT @cus_name = CUS_NAME  FROM DELETED AS i JOIN KHACHHANG ON KHACHHANG.CUS_CODE = I.CUS_CODE
BEGIN
IF @contract_status = 'ACTIVE' OR @contract_status = 'Active'
	BEGIN
	if @type = 'TRA_SAU'
	INSERT INTO CTDK VALUES(DBO.AUTO_REG_CODE(),@contract_code,@reg_end,N'NOT COMPLETED')
	IF @type = 'TRA_TRUOC' AND @price <= @sd
		BEGIN
		INSERT INTO CTDK VALUES(DBO.AUTO_REG_CODE(),@contract_code,@reg_end,N'COMPLETED')
		UPDATE SODUKH SET SD_ACCOUNTBALANCE = SD_ACCOUNTBALANCE - @price  WHERE CUS_CODE = @cus_code
		END
	END
IF @contract_status = 'INACTIVE'
	BEGIN
	UPDATE KHACHHANG SET CUS_STATUS = 'BLACK_LIST' WHERE CUS_CODE = @cus_code
	INSERT INTO BLACKLIST VALUES(@cus_code,@cus_name,'BLACK_LIST')
	END
END;



GO
--ADD NEW HD => ADD FIRST CTDK
CREATE OR ALTER TRIGGER NEW_CONTRACT ON HOPDONG
AFTER INSERT AS
DECLARE @cus_code AS NVARCHAR(7);
DECLARE @contract_code as NVARCHAR(5);
DECLARE @contract_status AS NVARCHAR(100);
DECLARE @reg_end as DATETIME;
DECLARE @now datetime;
DECLARE @type NVARCHAR(50);
DECLARE @day INT
DECLARE @price FLOAT
DECLARE @sd FLOAT

SELECT @day = DICHVU.SERVICE_DURATION FROM inserted AS i
JOIN DICHVU ON DICHVU.SERVICE_CODE = i.SERVICE_CODE
set @now = getdate()
SET @reg_end = dateadd(day,+@day,@now)
SELECT @cus_code = i.CUS_CODE FROM inserted AS i
SELECT @contract_code = i.CONTRACT_CODE FROM inserted AS i
SELECT @contract_status = i.CONTRACT_STATUS FROM inserted AS i
JOIN DICHVU ON DICHVU.SERVICE_CODE = i.SERVICE_CODE
SELECT @type = SERVICE_DESC FROM inserted AS i join DICHVU on DICHVU.SERVICE_CODE = i.SERVICE_CODE
SELECT @price = SERVICE_PRICE FROM inserted AS i join DICHVU on DICHVU.SERVICE_CODE = i.SERVICE_CODE
SELECT @sd = SD_ACCOUNTBALANCE FROM inserted AS i JOIN KHACHHANG ON KHACHHANG.CUS_CODE = I.CUS_CODE JOIN SODUKH ON SODUKH.CUS_CODE = KHACHHANG.CUS_CODE
BEGIN
if @type = 'TRA_SAU'
INSERT INTO CTDK VALUES(DBO.AUTO_REG_CODE(),@contract_code,@reg_end,N'NOT COMPLETED')
IF @type = 'TRA_TRUOC' AND @price <= @sd
	BEGIN
	INSERT INTO CTDK VALUES(DBO.AUTO_REG_CODE(),@contract_code,@reg_end,N'COMPLETED')
	UPDATE SODUKH SET SD_ACCOUNTBALANCE = SD_ACCOUNTBALANCE - @price  WHERE CUS_CODE = @cus_code
	END
END;


-- BLACK LIST
GO
CREATE TABLE BLACKLIST
(
   CUS_CODE NVARCHAR(7)REFERENCES KHACHHANG(CUS_CODE) PRIMARY KEY,
   CUS_NAME NVARCHAR(250),
   CUS_STATUS NVARCHAR(50)
);

GO
CREATE OR ALTER TRIGGER ADD_BLACKLIST ON KHACHHANG
AFTER UPDATE AS
DECLARE @cus_code as NVARCHAR(7);
DECLARE @status AS NVARCHAR(50);
DECLARE @cus_name AS NVARCHAR(250);


SELECT @cus_code = I.CUS_CODE FROM INSERTED AS I
SELECT @cus_name = I.CUS_NAME FROM INSERTED AS I
SELECT @status = I.CUS_STATUS FROM INSERTED AS I

BEGIN
IF @status = 'BLACK_LIST'
INSERT INTO BLACKLIST VALUES(@cus_code,@cus_name,@status)
ELSE
DELETE FROM BLACKLIST WHERE CUS_CODE = @cus_code
END;

--LOG KHACH HANG
GO
CREATE OR ALTER TABLE CHANGEDATA
(	CUS_CODE NVARCHAR(7) REFERENCES KHACHHANG(CUS_CODE) FOREIGN KEY,
	FIELD NVARCHAR(50),
	OLD_DATA VARCHAR(250),
	NEW_DATA VARCHAR(250),
	ACTION_TIME smalldatetime);



-- LOG CHANGES WHEN A CUSTOMER ARE DELETED
GO
CREATE OR ALTER TRIGGER DELETE_NOTE
ON KHACHHANG
AFTER DELETE 
AS
DECLARE @cus_code AS NVARCHAR(7);
DECLARE @cus_name AS NVARCHAR(250);
DECLARE @cus_birth AS DATETIME;
DECLARE @cus_phone AS  INT;
DECLARE @cus_address AS NVARCHAR(250);
DECLARE @branch_code AS VARCHAR(5);
DECLARE @cus_status NVARCHAR(50)

SELECT @cus_code = I.CUS_CODE FROM DELETED AS I;
SELECT @cus_name = I.CUS_NAME FROM DELETED AS I;
SELECT @cus_birth = I.CUS_BIRTH FROM DELETED AS I;
SELECT @cus_phone = I.CUS_PHONE FROM DELETED AS I;
SELECT @cus_address = I.CUS_ADDRESS FROM deleteD AS I;
SELECT @branch_code = I.BRANCH_CODE FROM DELETED AS I;
SELECT @cus_status = I.CUS_STATUS FROM DELETED AS I;

BEGIN
IF @cus_code IS NOT NULL
INSERT INTO CHANGEDATA VALUES (@cus_code, 'CUS_CODE', @cus_code, NULL,SYSDATETIME())
IF @cus_name IS NOT NULL
INSERT INTO CHANGEDATA VALUES (@cus_code, 'CUS_NAME', @cus_name, NULL,SYSDATETIME())
IF @cus_birth IS NOT NULL
INSERT INTO CHANGEDATA VALUES (@cus_code, 'CUS_BIRTH', @cus_birth, NULL,SYSDATETIME())
IF @cus_phone IS NOT NULL
INSERT INTO CHANGEDATA VALUES (@cus_code, 'CUS_PHONE', @cus_phone, NULL,SYSDATETIME())
IF @cus_address IS NOT NULL
INSERT INTO CHANGEDATA VALUES (@cus_code, 'CUS_ADDRESS', @cus_address, NULL,SYSDATETIME())
IF @branch_code IS NOT NULL
INSERT INTO CHANGEDATA VALUES (@cus_code, 'BRANCH_CODE', @branch_code, NULL, SYSDATETIME())
IF @cus_status IS NOT NULL
INSERT INTO CHANGEDATA VALUES (@cus_code, 'CUS_STATUS', @cus_status, NULL, SYSDATETIME())
END;


-- LOG CHANGES WHEN CUSTOMERS CHANGE INFOMATION 
GO
CREATE OR ALTER TRIGGER UPDATE_NOTE
ON KHACHHANG
AFTER UPDATE, INSERT
AS
DECLARE @NEWcus_code AS NVARCHAR(7);
DECLARE @NEWcus_name AS NVARCHAR(250);
DECLARE @NEWcus_birth AS DATETIME;
DECLARE @NEWcus_phone AS  INT;
DECLARE @NEWcus_address AS NVARCHAR(250);
DECLARE @NEWbranch_code AS VARCHAR(5);
DECLARE @NEWcus_status NVARCHAR(50)

DECLARE @OLDcus_code AS NVARCHAR(7);
DECLARE @OLDcus_name AS NVARCHAR(250);
DECLARE @OLDcus_birth AS DATETIME;
DECLARE @OLDcus_phone AS  INT;
DECLARE @OLDcus_address AS NVARCHAR(250);
DECLARE @OLDbranch_code AS VARCHAR(5);
DECLARE @OLDcus_status NVARCHAR(50)

SELECT @NEWcus_code = I.CUS_CODE FROM INSERTED AS I;
SELECT @NEWcus_name = I.CUS_NAME FROM INSERTED AS I;
SELECT @NEWcus_birth = I.CUS_BIRTH FROM INSERTED AS I;
SELECT @NEWcus_phone = I.CUS_PHONE FROM INSERTED AS I;
SELECT @NEWcus_address = I.CUS_ADDRESS FROM INSERTED AS I;
SELECT @NEWbranch_code = I.BRANCH_CODE FROM INSERTED AS I;
SELECT @NEWcus_status = I.CUS_STATUS FROM INSERTED AS I;

SELECT @OLDcus_code = I.CUS_CODE FROM DELETED AS I;
SELECT @OLDcus_name = I.CUS_NAME FROM DELETED AS I;
SELECT @OLDcus_birth = I.CUS_BIRTH FROM DELETED AS I;
SELECT @OLDcus_phone = I.CUS_PHONE FROM DELETED AS I;
SELECT @OLDcus_address = I.CUS_ADDRESS FROM deleteD AS I;
SELECT @OLDbranch_code = I.BRANCH_CODE FROM DELETED AS I;
SELECT @OLDcus_status = I.CUS_STATUS FROM DELETED AS I;


BEGIN
IF @NEWcus_code <> @OLDcus_code OR (@OLDcus_code IS NULL AND @NEWcus_code IS NOT NULL) OR (@OLDcus_code IS NOT NULL AND @NEWcus_code IS NULL)
INSERT INTO CHANGEDATA VALUES (@NEWcus_code, 'CUS_CODE', @OLDcus_code, @NEWcus_code, SYSDATETIME())

IF @OLDcus_name <> @NEWcus_name OR (@OLDcus_name IS NULL AND @NEWcus_name IS NOT NULL) OR (@OLDcus_name IS NOT NULL AND @NEWcus_name IS NULL)
INSERT INTO CHANGEDATA VALUES (@OLDcus_code, 'CUS_NAME', @OLDcus_name, @NEWcus_name, SYSDATETIME())

IF @OLDcus_birth <> @NEWcus_birth OR (@OLDcus_birth IS NULL AND @NEWcus_birth IS NOT NULL) OR (@OLDcus_birth IS NOT NULL AND @NEWcus_birth IS NULL)
INSERT INTO CHANGEDATA VALUES (@OLDcus_code, 'CUS_BIRTH', @OLDcus_birth, @NEWcus_birth, SYSDATETIME())

IF @OLDcus_phone <> @NEWcus_phone OR (@OLDcus_phone IS NULL AND @NEWcus_phone IS NOT NULL) OR (@OLDcus_phone IS NOT NULL AND @NEWcus_phone IS NULL)
INSERT INTO CHANGEDATA VALUES (@OLDcus_code, 'CUS_PHONE', @OLDcus_phone, @NEWcus_phone, SYSDATETIME())

IF @OLDcus_address <> @NEWcus_address OR (@OLDcus_address IS NULL AND @NEWcus_address IS NOT NULL) OR (@OLDcus_address IS NOT NULL AND @NEWcus_address IS NULL)
INSERT INTO CHANGEDATA VALUES (@OLDcus_code, 'CUS_ADDRESS', @OLDcus_address, @NEWcus_address, SYSDATETIME())

IF @OLDbranch_code <> @NEWbranch_code OR (@OLDbranch_code IS NULL AND @NEWbranch_code IS NOT NULL) OR (@OLDbranch_code IS NOT NULL AND @NEWbranch_code IS NULL)
INSERT INTO CHANGEDATA VALUES (@OLDcus_code, 'BRANCH_CODE', @OLDbranch_code, @NEWbranch_code, SYSDATETIME())

IF @OLDcus_status <> @NEWcus_status OR (@OLDcus_status IS NULL AND @NEWcus_status IS NOT NULL) OR (@OLDcus_status IS NOT NULL AND @NEWcus_status IS NULL)
INSERT INTO CHANGEDATA VALUES (@OLDcus_code, 'CUS_STATUS', @OLDcus_status, @NEWcus_status, SYSDATETIME())
END;


--TINH TIEN TU HOAT DONG
GO
CREATE OR ALTER TRIGGER SD_CACUTALTE ON HOATDONG
AFTER INSERT AS
DECLARE @cus_code AS NVARCHAR(5);
DECLARE @price AS FLOAT
SELECT @cus_code = i.CUS_CODE FROM inserted AS i;
SELECT @price = I.HOATDONG_PRICE FROM inserted AS i;

BEGIN
UPDATE SODUKH SET SD_ACCOUNTBALANCE = SD_ACCOUNTBALANCE + @price WHERE CUS_CODE = @cus_code
END;

--NOT COMPLETED PAYMENT UPDATE AFTER HAD A HOADON
GO
CREATE OR ALTER TRIGGER UPDATE_CTDK ON HOADON
AFTER INSERT AS

INSERT INTO KHACHHANG VALUES(N'KH01', N'BÙI ĐỨC TIẾN', N'2002-04-29', N'0656796080', N'Số 54, Quảng An, Huyện Thanh Thủy, Phú Thọ', N'1512','NONE')
INSERT INTO KHACHHANG VALUES(N'KH02', N'BÙI ĐỨC TIẾN', N'1999-04-14', N'0562363866', N'Số 6, Quỳnh Mai, Huyện Krông Bông, Đắk Lắk', N'4011','NONE')
INSERT INTO KHACHHANG VALUES(N'KH03', N'BÙI ĐỨC TIỆP', N'1992-02-17', N'0282240288', N'Số 53, Hòa Mã, Huyện Cam Lâm, Khánh Hoà', N'4109','NONE')
INSERT INTO KHACHHANG VALUES(N'KH04', N'BÙI ĐỨC TIỆP', N'2002-02-08', N'0576135999', N'Số 85, Kim Quan Thượng, Huyện Tánh Linh, Bình Thuận', N'4708','NONE')
INSERT INTO KHACHHANG VALUES(N'KH05', N'BÙI ĐỨC TOÀN', N'1998-06-22', N'0980210033', N'Số 58, Vạn Bảo, Huyện Phù Mỹ, Bình Định', N'3705','NONE')
INSERT INTO KHACHHANG VALUES(N'KH06', N'BÙI ĐỨC TOÀN', N'2000-12-10', N'0336459596', N'Số 93, Kim Hoa, Huyện Phú Riềng, Bình Phước', N'4311','NONE')

INSERT INTO HOATDONG VALUES(N'HD01',N'KH01', N'2021-07-12',N'NOP', 7134)
INSERT INTO HOATDONG VALUES(N'HD02',N'KH02', N'2020-05-09',N'DATA',-25974)
INSERT INTO HOATDONG VALUES(N'HD03',N'KH03', N'2021-02-09',N'CALL',-34956)
INSERT INTO HOATDONG VALUES(N'HD04',N'KH04', N'2020-05-18',N'NOP', 91133)
INSERT INTO HOATDONG VALUES(N'HD05',N'KH05', N'2021-08-16',N'NOP', 43086)
INSERT INTO HOATDONG VALUES(N'HD06',N'KH06', N'2021-03-03',N'NOP', -1867)

INSERT INTO DICHVU VALUES('DV100', 'SMSD10', 5000, 1, 'TRA_TRUOC', '100 SMS')
INSERT INTO DICHVU VALUES('DV101', 'SMSD20', 10000, 1, 'TRA_TRUOC', '200 SMS')
INSERT INTO DICHVU VALUES('DV102', 'SMSD30', 15000, 1, 'TRA_TRUOC', '300SMS')
INSERT INTO DICHVU VALUES('DV103', 'SMSW10', 10000, 7, 'TRA_TRUOC', '100SMS')
INSERT INTO DICHVU VALUES('DV104', 'SMSW20', 20000, 7, 'TRA_TRUOC', '200SMS')
INSERT INTO DICHVU VALUES('DV105', 'SMSW30', 25000, 7, 'TRA_TRUOC', '1000SMS')
INSERT INTO DICHVU VALUES('DV106', 'SMSM10', 15000, 30, 'TRA_TRUOC', '200SMS')
INSERT INTO DICHVU VALUES('DV107', 'SMSM20', 25000, 30, 'TRA_TRUOC', '150SMS')
INSERT INTO DICHVU VALUES('DV108', 'SMSM30', 35000, 30, 'TRA_TRUOC', '500SMS')
INSERT INTO DICHVU VALUES('DV200', 'DTD10', 10000, 1, 'TRA_TRUOC', '120 PHUT')
INSERT INTO DICHVU VALUES('DV201', 'DTD20', 20000, 1, 'TRA_TRUOC', '150 PHUT')
INSERT INTO DICHVU VALUES('DV202', 'DTD30', 30000, 1, 'TRA_TRUOC', '180 PHUT')
INSERT INTO DICHVU VALUES('DV203', 'DTD40', 40000, 1, 'TRA_TRUOC', '200 PHUT')
INSERT INTO DICHVU VALUES('DV204', 'DTW10', 10000, 7, 'TRA_TRUOC', '30 PHUT')
INSERT INTO DICHVU VALUES('DV205', 'DTW20', 20000, 7, 'TRA_TRUOC', '60 PHUT')
INSERT INTO DICHVU VALUES('DV206', 'DTW30', 30000, 7, 'TRA_TRUOC', '90 PHUT')
INSERT INTO DICHVU VALUES('DV207', 'DTW40', 40000, 7, 'TRA_TRUOC', '120 PHUT')
INSERT INTO DICHVU VALUES('DV208', 'DTM10', 10000, 30, 'TRA_TRUOC', '90 PHUT')
INSERT INTO DICHVU VALUES('DV209', 'DTM20', 20000, 30, 'TRA_TRUOC', '120 PHUT')
INSERT INTO DICHVU VALUES('DV210', 'DTM30', 30000, 30, 'TRA_TRUOC', '150 PHUT')
INSERT INTO DICHVU VALUES('DV300', 'DATAD5',5000, 1, 'TRA_TRUOC', '200MB')
INSERT INTO DICHVU VALUES('DV301', 'DATAD10',10000, 1, 'TRA_TRUOC', '500MB')
INSERT INTO DICHVU VALUES('DV302', 'DATAD15', 15000, 1, 'TRA_TRUOC', '1GB')
INSERT INTO DICHVU VALUES('DV303', 'DATAD500', 15000, 1, 'TRA_TRUOC', '500MB+Free Facebook')
INSERT INTO DICHVU VALUES('DV304', 'DATAD1G', 20000, 1, 'TRA_TRUOC', '1GB+Free Facebook')
INSERT INTO DICHVU VALUES('DV305', 'DATAW5', 10000, 7, 'TRA_TRUOC', '200MB')
INSERT INTO DICHVU VALUES('DV306', 'DATAW10', 15000, 7, 'TRA_TRUOC', '500MB')
INSERT INTO DICHVU VALUES('DV307', 'DATAW200', 20000, 7, 'TRA_TRUOC', '200MB+Free Tik Tok')
INSERT INTO DICHVU VALUES('DV308', 'DATAW500', 30000, 7, 'TRA_TRUOC', '500MB+Free Tik Tok ')
INSERT INTO DICHVU VALUES('DV309', 'DATAW', 25000, 7, 'TRA_TRUOC', '1GB')
INSERT INTO DICHVU VALUES('DV310', 'DATAM70', 70000, 30, 'TRA_TRUOC', '2GB')
INSERT INTO DICHVU VALUES('DV311', 'DATAM90', 90000, 30, 'TRA_TRUOC', '10GB')
INSERT INTO DICHVU VALUES('DV312', 'DATAM30', 30000, 30, 'TRA_TRUOC', '500MB')
INSERT INTO DICHVU VALUES('DV313', 'DATAY1', 200000, 365, 'TRA_TRUOC', '200GB')
INSERT INTO DICHVU VALUES('DV314', 'DATAY300', 300000, 365, 'TRA_TRUOC', 'Free ')
INSERT INTO DICHVU VALUES('DV315', 'DATAST', 250000, 365, 'TRA_TRUOC', '200GB +Free Facebook ')
INSERT INTO DICHVU VALUES('DV316', 'DATAST1', 220000, 365, 'TRA_TRUOC', '200GB +Free Tik Tok ')
INSERT INTO DICHVU VALUES('DV400', 'WIFIM1', 170000, 30, 'TRA_SAU', '30 Mbps')
INSERT INTO DICHVU VALUES('DV401', 'WIFIM2', 260000, 30, 'TRA_SAU', '40 Mbps')
INSERT INTO DICHVU VALUES('DV402', 'WIFIQ1', 550000, 90, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV403', 'WIFIQ2', 840000, 90, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV404', 'WIFICOMBO1', 980000, 180, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV405', 'WIFICOMBO2', 1529000, 180, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV406', 'WIFIY1', 1790000, 365, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV407', 'WIFIY2', 3140000, 365, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV500', 'TELEM1', 30000, 30, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV501', 'TELEM2', 40000, 30, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV502', 'TELEQ1', 50000, 90, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV503', 'TELEQ2', 70000, 90, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV504', 'TELECOMBO1', 90000, 180, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV506', 'TELECOMBO2', 120000,180, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV507', 'TELEY1', 170000, 365, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV508', 'TELEY2', 210000, 365, 'TRA_SAU', 'Null')
INSERT INTO DICHVU VALUES('DV509', 'TELEY2', 210000, 7, 'TRA_SAU', 'Null')

INSERT INTO HOPDONG VALUES('MD21', 'KH01', 'DV100', 'Active')
INSERT INTO HOPDONG VALUES('MD22', 'KH02', 'DV206', 'Active')
INSERT INTO HOPDONG VALUES('MD23', 'KH03', 'DV201', 'Active')
INSERT INTO HOPDONG VALUES('MD24', 'KH04', 'DV301', 'Active')
INSERT INTO HOPDONG VALUES('MD25', 'KH05', 'DV404', 'Active')
INSERT INTO HOPDONG VALUES('MD26', 'KH06', 'DV504', 'Active')
INSERT INTO HOPDONG VALUES('MD39', 'KH06', 'DV509', 'Active')

UPDATE KHACHHANG SET CUS_STATUS = 'BLACK_LIST' WHERE CUS_CODE = 'KH01'
UPDATE KHACHHANG SET CUS_STATUS = 'NONE' WHERE CUS_CODE = 'KH01'
UPDATE HOPDONG SET CONTRACT_STATUS = 'ACTIVE' WHERE CONTRACT_CODE ='MD01'
DELETE FROM CTDK WHERE REG_CODE = 'CTDK0'
INSERT INTO HOPDONG VALUES('MD08', 'KH01', 'DV104', 'ACTIVE')
SELECT * FROM KHACHHANG
SELECT * FROM BLACKLIST
SELECT * FROM KHACHHANG WHERE CUS_STATUS = 'BLACK_LIST'
SELECT * FROM HOATDONG
SELECT * FROM HOPDONG
SELECT * FROM CTDK
SELECT * FROM SODUKH
SELECT * FROM DICHVU